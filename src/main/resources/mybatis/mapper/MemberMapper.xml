<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.toyproject.springsecurity.login.model.dao.MemberMapper">

    <resultMap id="memberResultMap" type="MemberDTO">
        <id property="memberNo" column="MEMBER_NO"/>
        <result property="memberId" column="MEMBER_ID"/>
        <result property="memberPwd" column="MEMBER_PWD"/>
        <result property="nickname" column="NICKNAME"/>
        <result property="phone" column="PHONE"/>
        <result property="email" column="EMAIL"/>
        <result property="address" column="ADDRESS"/>
        <result property="enrollDate" column="ENROLL_DATE"/>
        <result property="memberStatus" column="MEMBER_YN"/>
        <result property="memberRole" column="MEMBER_ROLE"/>
        <result property="emailCode" column="EMAIL_CODE"/>
    </resultMap>

    <!-- 회원가입 -->
    <insert id="insertMember" parameterType="MemberDTO">
        INSERT
          INTO MEMBER
        (
          MEMBER_NO, MEMBER_ID, MEMBER_PWD
        , NICKNAME, PHONE, EMAIL
        , ADDRESS, ENROLL_DATE, MEMBER_YN, MEMBER_ROLE
        )
        VALUES
        (
          SEQ_MEMBER_NO.NEXTVAL, #{ memberId }, #{ memberPwd }
        , #{ nickname }, #{ phone }, #{ email }
        , #{ address }, DEFAULT, 'Y', 'ROLE_USER'
        )
    </insert>

    <!-- 회원가입시 아이디 중복체크 -->
    <select id="selectMemberById" resultType="string">
        SELECT
               MEMBER_ID
          FROM MEMBER
         WHERE MEMBER_YN = 'Y'
           AND MEMBER_ID = #{ memberId }
    </select>

    <!-- 로그인 아이디 찾기 -->
    <select id="findByMemberId" resultType="MemberDTO">
        SELECT
               MEMBER_NO
             , MEMBER_ID
             , MEMBER_PWD
             , NICKNAME
             , PHONE
             , EMAIL
             , ADDRESS
             , ENROLL_DATE
             , MEMBER_YN
             , MEMBER_ROLE
         FROM MEMBER
        WHERE MEMBER_YN = 'Y'
          AND MEMBER_ID = #{ memberId }
    </select>

    <!-- DB 이메일 인증코드 설정 -->
    <update id="updateEmailCode" parameterType="MemberDTO">
        UPDATE
               MEMBER
           SET EMAIL_CODE = #{ emailCode }
         WHERE EMAIL = #{ email }
           AND MEMBER_ID = #{ memberId }
    </update>

    <!-- 이메일 인증코드 조회 -->
    <select id="selectEmailCode" resultMap="memberResultMap" resultType="String">
        SELECT
               EMAIL_CODE
          FROM MEMBER
         WHERE MEMBER_ID = #{ memberId }
           AND EMAIL = #{ email }
    </select>

    <!-- 비밀번호 재설정 -->
    <update id="updatePwd" parameterType="MemberDTO">
        UPDATE
               MEMBER
           SET MEMBER_PWD = #{ memberPwd }
         WHERE EMAIL_CODE = #{ emailCode }
    </update>

    <!-- 이메일 조회 -->
    <select id="selectEmail" resultMap="memberResultMap">
        SELECT
               EMAIL
          FROM MEMBER
         WHERE MEMBER_ID = #{ memberId }
    </select>
</mapper>